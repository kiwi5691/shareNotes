<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="cn.sharenotes.db.dao.PostsMapper">
  <resultMap id="BaseResultMap" type="cn.sharenotes.db.domain.Posts">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="type" jdbcType="INTEGER" property="type" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
    <result column="update_time" jdbcType="TIMESTAMP" property="updateTime" />
    <result column="create_from" jdbcType="INTEGER" property="createFrom" />
    <result column="disallow_comment" jdbcType="INTEGER" property="disallowComment" />
    <result column="edit_time" jdbcType="TIMESTAMP" property="editTime" />
    <result column="title" jdbcType="VARCHAR" property="title" />
    <result column="top_priority" jdbcType="INTEGER" property="topPriority" />
    <result column="visits" jdbcType="BIGINT" property="visits" />
  </resultMap>
  <resultMap extends="BaseResultMap" id="ResultMapWithBLOBs" type="cn.sharenotes.db.domain.PostsWithBLOBs">
    <result column="format_content" jdbcType="LONGVARCHAR" property="formatContent" />
    <result column="original_content" jdbcType="LONGVARCHAR" property="originalContent" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, type, create_time, update_time, create_from, disallow_comment, edit_time, title, 
    top_priority, visits
  </sql>
  <sql id="Blob_Column_List">
    format_content, original_content
  </sql>
  <select id="selectByExampleWithBLOBs" parameterType="cn.sharenotes.db.domain.PostsExample" resultMap="ResultMapWithBLOBs">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from posts
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByExample" parameterType="cn.sharenotes.db.domain.PostsExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from posts
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="ResultMapWithBLOBs">
    select 
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from posts
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from posts
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="cn.sharenotes.db.domain.PostsExample">
    delete from posts
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="cn.sharenotes.db.domain.PostsWithBLOBs">
    insert into posts (id, type, create_time, 
      update_time, create_from, disallow_comment, 
      edit_time, title, top_priority, 
      visits, format_content, original_content
      )
    values (#{id,jdbcType=INTEGER}, #{type,jdbcType=INTEGER}, #{createTime,jdbcType=TIMESTAMP}, 
      #{updateTime,jdbcType=TIMESTAMP}, #{createFrom,jdbcType=INTEGER}, #{disallowComment,jdbcType=INTEGER}, 
      #{editTime,jdbcType=TIMESTAMP}, #{title,jdbcType=VARCHAR}, #{topPriority,jdbcType=INTEGER}, 
      #{visits,jdbcType=BIGINT}, #{formatContent,jdbcType=LONGVARCHAR}, #{originalContent,jdbcType=LONGVARCHAR}
      )
  </insert>
  <insert id="insertSelective" parameterType="cn.sharenotes.db.domain.PostsWithBLOBs">
    insert into posts
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="type != null">
        type,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
      <if test="updateTime != null">
        update_time,
      </if>
      <if test="createFrom != null">
        create_from,
      </if>
      <if test="disallowComment != null">
        disallow_comment,
      </if>
      <if test="editTime != null">
        edit_time,
      </if>
      <if test="title != null">
        title,
      </if>
      <if test="topPriority != null">
        top_priority,
      </if>
      <if test="visits != null">
        visits,
      </if>
      <if test="formatContent != null">
        format_content,
      </if>
      <if test="originalContent != null">
        original_content,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="type != null">
        #{type,jdbcType=INTEGER},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null">
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="createFrom != null">
        #{createFrom,jdbcType=INTEGER},
      </if>
      <if test="disallowComment != null">
        #{disallowComment,jdbcType=INTEGER},
      </if>
      <if test="editTime != null">
        #{editTime,jdbcType=TIMESTAMP},
      </if>
      <if test="title != null">
        #{title,jdbcType=VARCHAR},
      </if>
      <if test="topPriority != null">
        #{topPriority,jdbcType=INTEGER},
      </if>
      <if test="visits != null">
        #{visits,jdbcType=BIGINT},
      </if>
      <if test="formatContent != null">
        #{formatContent,jdbcType=LONGVARCHAR},
      </if>
      <if test="originalContent != null">
        #{originalContent,jdbcType=LONGVARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="cn.sharenotes.db.domain.PostsExample" resultType="java.lang.Long">
    select count(*) from posts
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update posts
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.type != null">
        type = #{record.type,jdbcType=INTEGER},
      </if>
      <if test="record.createTime != null">
        create_time = #{record.createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.updateTime != null">
        update_time = #{record.updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.createFrom != null">
        create_from = #{record.createFrom,jdbcType=INTEGER},
      </if>
      <if test="record.disallowComment != null">
        disallow_comment = #{record.disallowComment,jdbcType=INTEGER},
      </if>
      <if test="record.editTime != null">
        edit_time = #{record.editTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.title != null">
        title = #{record.title,jdbcType=VARCHAR},
      </if>
      <if test="record.topPriority != null">
        top_priority = #{record.topPriority,jdbcType=INTEGER},
      </if>
      <if test="record.visits != null">
        visits = #{record.visits,jdbcType=BIGINT},
      </if>
      <if test="record.formatContent != null">
        format_content = #{record.formatContent,jdbcType=LONGVARCHAR},
      </if>
      <if test="record.originalContent != null">
        original_content = #{record.originalContent,jdbcType=LONGVARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExampleWithBLOBs" parameterType="map">
    update posts
    set id = #{record.id,jdbcType=INTEGER},
      type = #{record.type,jdbcType=INTEGER},
      create_time = #{record.createTime,jdbcType=TIMESTAMP},
      update_time = #{record.updateTime,jdbcType=TIMESTAMP},
      create_from = #{record.createFrom,jdbcType=INTEGER},
      disallow_comment = #{record.disallowComment,jdbcType=INTEGER},
      edit_time = #{record.editTime,jdbcType=TIMESTAMP},
      title = #{record.title,jdbcType=VARCHAR},
      top_priority = #{record.topPriority,jdbcType=INTEGER},
      visits = #{record.visits,jdbcType=BIGINT},
      format_content = #{record.formatContent,jdbcType=LONGVARCHAR},
      original_content = #{record.originalContent,jdbcType=LONGVARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update posts
    set id = #{record.id,jdbcType=INTEGER},
      type = #{record.type,jdbcType=INTEGER},
      create_time = #{record.createTime,jdbcType=TIMESTAMP},
      update_time = #{record.updateTime,jdbcType=TIMESTAMP},
      create_from = #{record.createFrom,jdbcType=INTEGER},
      disallow_comment = #{record.disallowComment,jdbcType=INTEGER},
      edit_time = #{record.editTime,jdbcType=TIMESTAMP},
      title = #{record.title,jdbcType=VARCHAR},
      top_priority = #{record.topPriority,jdbcType=INTEGER},
      visits = #{record.visits,jdbcType=BIGINT}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="cn.sharenotes.db.domain.PostsWithBLOBs">
    update posts
    <set>
      <if test="type != null">
        type = #{type,jdbcType=INTEGER},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null">
        update_time = #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="createFrom != null">
        create_from = #{createFrom,jdbcType=INTEGER},
      </if>
      <if test="disallowComment != null">
        disallow_comment = #{disallowComment,jdbcType=INTEGER},
      </if>
      <if test="editTime != null">
        edit_time = #{editTime,jdbcType=TIMESTAMP},
      </if>
      <if test="title != null">
        title = #{title,jdbcType=VARCHAR},
      </if>
      <if test="topPriority != null">
        top_priority = #{topPriority,jdbcType=INTEGER},
      </if>
      <if test="visits != null">
        visits = #{visits,jdbcType=BIGINT},
      </if>
      <if test="formatContent != null">
        format_content = #{formatContent,jdbcType=LONGVARCHAR},
      </if>
      <if test="originalContent != null">
        original_content = #{originalContent,jdbcType=LONGVARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKeyWithBLOBs" parameterType="cn.sharenotes.db.domain.PostsWithBLOBs">
    update posts
    set type = #{type,jdbcType=INTEGER},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      update_time = #{updateTime,jdbcType=TIMESTAMP},
      create_from = #{createFrom,jdbcType=INTEGER},
      disallow_comment = #{disallowComment,jdbcType=INTEGER},
      edit_time = #{editTime,jdbcType=TIMESTAMP},
      title = #{title,jdbcType=VARCHAR},
      top_priority = #{topPriority,jdbcType=INTEGER},
      visits = #{visits,jdbcType=BIGINT},
      format_content = #{formatContent,jdbcType=LONGVARCHAR},
      original_content = #{originalContent,jdbcType=LONGVARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="cn.sharenotes.db.domain.Posts">
    update posts
    set type = #{type,jdbcType=INTEGER},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      update_time = #{updateTime,jdbcType=TIMESTAMP},
      create_from = #{createFrom,jdbcType=INTEGER},
      disallow_comment = #{disallowComment,jdbcType=INTEGER},
      edit_time = #{editTime,jdbcType=TIMESTAMP},
      title = #{title,jdbcType=VARCHAR},
      top_priority = #{topPriority,jdbcType=INTEGER},
      visits = #{visits,jdbcType=BIGINT}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>